name: Build Snapshot

on:
  workflow_dispatch:
    inputs:
      git_tag:
        description: "Git Tag"
        required: true
        default: "v2.82.1"
      git_commits:
        description: "Git Commits since last tag"
        required: true
        default: "297"

permissions:
  contents: write         # Grants permission to push changes

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.git.outputs.commit_hash }}
      describe: ${{ steps.git.outputs.describe }}
    steps:
      - name: Calculate commit hash
        id: git
        run: |

          echo "Git Tag: ${{ github.event.inputs.git_tag }}"
          echo "Git Commits: ${{ github.event.inputs.git_commits }}"

          git clone --filter=blob:none --no-checkout https://github.com/etlegacy/etlegacy.git
          cd etlegacy

          # Fetch all tags from the remote repository
          git fetch --tags

          # Use git rev-list to find the commit at the given number of commits since the tag
          commit_hash=$(git rev-list --reverse "${{ github.event.inputs.git_tag }}"..HEAD | sed -n "${{ github.event.inputs.git_commits }}p")

          # Print the full commit hash
          echo "Full commit hash: $commit_hash"

          git_describe=$(git describe $commit_hash --abbrev=7 2>/dev/null | awk '{$1=$1};1')

          echo "Full describe: $git_describe"

          echo "describe=$git_describe" >> "$GITHUB_OUTPUT"
          echo "commit_hash=$commit_hash" >> "$GITHUB_OUTPUT"

  lnx64-mod:
    runs-on: ubuntu-20.04
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: etlegacy/etlegacy
          submodules: true
          ref: ${{ needs.version.outputs.commit_hash }}

      - name: Info
        run: |
          echo "Commit Hash: ${{ needs.version.outputs.commit_hash }}"
          echo "Describe: ${{ needs.version.outputs.describe }}"
          echo "Git Tag: ${{ github.event.inputs.git_tag }}"

      - name: Build
        env:
          CI_ETL_DESCRIBE: ${{ needs.version.outputs.describe }}
          CI_ETL_TAG: ${{ github.event.inputs.git_tag }}
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{github.event.inputs.git_tag}} -e CI=true
          run: |
            git config --global --add safe.directory /code
            ./easybuild.sh build -64 -mod

      - uses: actions/upload-artifact@v4
        with:
          name: lnx64-mod
          path: |
            build/legacy/cgame*.so
            build/legacy/ui*.so
            build/legacy/qagame*.so
            build/legacy/tvgame*.so
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: incomplete-mod-pk3
          path: build/legacy/legacy_*.pk3
          if-no-files-found: error

  lnx32-mod:
    runs-on: ubuntu-20.04
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: etlegacy/etlegacy
          submodules: true
          ref: ${{ needs.version.outputs.commit_hash }}

      - name: Build
        env:
          CI_ETL_DESCRIBE: ${{ needs.version.outputs.describe }}
          CI_ETL_TAG: ${{ github.event.inputs.git_tag }}
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{github.event.inputs.git_tag}} -e CI=true
          run: |
            git config --global --add safe.directory /code
            ./easybuild.sh build -mod

      - uses: actions/upload-artifact@v4
        with:
          name: lnx32-mod
          path: |
            build/legacy/cgame*.so
            build/legacy/ui*.so
            build/legacy/qagame*.so
            build/legacy/tvgame*.so
          if-no-files-found: error

  lnx-aarch64-mod:
    runs-on: ubuntu-20.04
    needs: version
    container:
      image: etlegacy/lnx-aarch64-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: etlegacy/etlegacy
          submodules: true
          ref: ${{ needs.version.outputs.commit_hash }}

      - name: Build
        env:
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{github.event.inputs.git_tag}}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          ./easybuild.sh build -RPIT -mod -ninja

      - uses: actions/upload-artifact@v4
        with:
          name: lnx-aarch64-mod
          path: |
            build/legacy/cgame*.so
            build/legacy/ui*.so
            build/legacy/qagame*.so
            build/legacy/tvgame*.so
          if-no-files-found: error

  osx-mod:
    runs-on: macos-12
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: etlegacy/etlegacy
          submodules: true
          ref: ${{ needs.version.outputs.commit_hash }}

      - name: Install dependencies
        run: brew bundle

      - name: List dev tools
        run: |
          # shellcheck disable=SC2010
          ls -la /Applications/ | grep Xcode
          ls -la /Library/Developer/CommandLineTools/SDKs/
          xcode-select --print-path
          xcrun -sdk macosx --show-sdk-path

      - name: Build
        env:
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
          DEVELOPER_DIR: /Library/Developer/CommandLineTools
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{github.event.inputs.git_tag}}
        shell: bash
        run: |
          ./easybuild.sh build -64 -mod --osx=10.10 --osx-arc="x86_64;arm64" -j

      - uses: actions/upload-artifact@v4
        with:
          name: osx-mod
          path: |
            build/legacy/cgame_mac
            build/legacy/ui_mac
            build/legacy/qagame_mac
            build/legacy/tvgame_mac
          if-no-files-found: error

  win-mod:
    runs-on: windows-2019
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: etlegacy/etlegacy
          submodules: true
          ref: ${{ needs.version.outputs.commit_hash }}

      - name: Build
        shell: cmd
        env:
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{github.event.inputs.git_tag}}
        run: |
          call .\easybuild.bat build -mod

      - uses: actions/upload-artifact@v4
        with:
          name: win-mod
          path: |
            build/legacy/cgame*.dll
            build/legacy/ui*.dll
            build/legacy/qagame*.dll
            build/legacy/tvgame*.dll
          if-no-files-found: error

  win64-mod:
    runs-on: windows-2019
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: etlegacy/etlegacy
          submodules: true
          ref: ${{ needs.version.outputs.commit_hash }}

      - name: Build
        shell: cmd
        env:
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{github.event.inputs.git_tag}}
        run: |
          call .\easybuild.bat build -mod -64

      - uses: actions/upload-artifact@v4
        with:
          name: win64-mod
          path: |
            build/legacy/cgame*.dll
            build/legacy/ui*.dll
            build/legacy/qagame*.dll
            build/legacy/tvgame*.dll
          if-no-files-found: error

  # android-mod:
  #   runs-on: ubuntu-20.04
  #   needs: version
  #   env:
  #     SIGNING_KEY_ALIAS: "test_alias"
  #     SIGNING_KEY_PASSWORD: "test_key_password"
  #     SIGNING_STORE_PASSWORD: "test_store_password"
  #     CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
  #     CI_ETL_TAG: ${{github.event.inputs.git_tag}}
  #   container:
  #     image: etlegacy/android-build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         repository: etlegacy/etlegacy
  #         submodules: true
  #         ref: ${{ needs.version.outputs.commit_hash }}

  #     - name: Setup JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'

  #     - name: Build JoyStick Dependency
  #       working-directory: ./app/libs/joystick
  #       run: |
  #         ./gradlew clean               --stacktrace --info
  #         ./gradlew assembleRelease     --stacktrace --info
  #         ./gradlew publishToMavenLocal --stacktrace --info

  #     - name: Upload JoyStick Dependency Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-joystick-packages
  #         path: '/root/.m2/repository/com/etlegacy/android/joystick/'
  #         if-no-files-found: error

  #     - name: Build Release
  #       run: |
  #         git config --global --add safe.directory "$GITHUB_WORKSPACE"
  #         ./gradlew clean assembleRelease --stacktrace --info
  #         ls -R

  #     - name: Prepare artifacts
  #       run: |
  #         mv ./app/build/intermediates/merged_native_libs/*/out/lib/arm64-v8a/libcgame*.so .
  #         mv ./app/build/intermediates/merged_native_libs/*/out/lib/arm64-v8a/libui*.so .
  #         mv ./app/build/intermediates/merged_native_libs/*/out/lib/x86/libcgame*.so .
  #         mv ./app/build/intermediates/merged_native_libs/*/out/lib/x86/libui*.so .
  #         mv ./app/build/intermediates/merged_native_libs/*/out/lib/x86_64/libcgame*.so .
  #         mv ./app/build/intermediates/merged_native_libs/*/out/lib/x86_64/libui*.so .
  #         ls -ltrah

  #     - name: Upload arm64-v8a
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-arm64-mod
  #         path: |
  #           libcgame*arm64*.so
  #           libui*arm64*.so
  #         if-no-files-found: error

  #     - name: Upload x86
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-x86-mod
  #         path: |
  #           libcgame*i386.so
  #           libui*i386.so
  #         if-no-files-found: error

  #     - name: Upload x86_64
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-x86_64-mod
  #         path: |
  #           libcgame*x86_64.so
  #           libui*x86_64.so
  #         if-no-files-found: error

  mod-merger:
    runs-on: ubuntu-20.04
    needs: [ version, lnx64-mod, lnx32-mod, osx-mod, win-mod, win64-mod, lnx-aarch64-mod] #, android-mod ]
    steps:

      - name: Info
        run: |
          echo "Commit Hash: ${{ needs.version.outputs.commit_hash }}"
          echo "Describe: ${{ needs.version.outputs.describe }}"
          echo "Git Tag: ${{ github.event.inputs.git_tag }}"

      - uses: actions/download-artifact@v4
        with:
          name: incomplete-mod-pk3

      - uses: actions/download-artifact@v4
        with:
          pattern: '*-mod'
          path: platforms
          merge-multiple: true

      - name: Create supported platform manifest
        shell: bash
        run: |
          echo "win_x86 win_x86_64 lnx_x86 lnx_x86_64 macos_x86_64 macos_aarch64 lnx_armv8_64" > platforms.manifest

      - name: Merge mod files
        shell: bash
        run: |
          zip -rvj -MM legacy_*.pk3 platforms.manifest platforms/cgame* platforms/ui*

      - name: Create mod zip
        shell: bash
        run: |
          zip -rvj -MM etlegacy-mod-${{needs.version.outputs.describe}}.zip legacy_*.pk3 platforms/qagame* platforms/tvgame*

      - name: Remove old artifacts
        uses: geekyeggo/delete-artifact@v4
        with:
          failOnError: false
          name: |
            incomplete-mod-pk3
            *-mod

      - uses: actions/upload-artifact@v4
        with:
          name: All-mods
          path: legacy_*.pk3
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: mod-zip
          path: etlegacy-mod-*.zip
          if-no-files-found: error

  lnx64:
    runs-on: ubuntu-20.04
    needs: [ version, mod-merger ]
    env:
      CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
      CI_ETL_TAG: ${{github.event.inputs.git_tag}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: etlegacy/etlegacy
          submodules: true
          ref: ${{ needs.version.outputs.commit_hash }}

      - name: Info
        run: |
          echo "Commit Hash: ${{ needs.version.outputs.commit_hash }}"
          echo "Describe: ${{ needs.version.outputs.describe }}"
          echo "Git Tag: ${{ github.event.inputs.git_tag }}"

      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{github.event.inputs.git_tag}} -e CI=true
          run: |
            git config --global --add safe.directory /code
            ./easybuild.sh build -64

      - name: Change Owner of Container Working Directory
        run: |
          action_name=$(whoami)
          action_group=$(groups "$action_name" | awk '{print $3}')
          sudo chown "${action_name}:${action_group}" -R .

      - uses: actions/download-artifact@v4
        with:
          name: All-mods
          path: build/legacy

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/legacy

      - name: Generate packages
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{github.event.inputs.git_tag}} -e CI=true
          run: |
            cd build/
            cpack

      - uses: actions/upload-artifact@v4
        with:
          name: lnx64-packages
          path: |
            build/etlegacy-*.tar.gz
          if-no-files-found: error